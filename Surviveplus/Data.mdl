Attribute VB_Name = "Data"
Option Explicit

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      一つ上のセルの値をインクリメントして、アクティブなセルにセットします。
'   入力：      アクティブセルの一つ上のセル
'   出力：      アクティブセルの値
'   注釈：      処理に成功すると一つ下のセルが選択されます。
'   使用方法：  ショートカット Ctrl + Shift + Alt + I に割り当てるには自作の auto_open プロシージャで
'                       Call Application.OnKey( "^+%I", "Surviveplus.xla!数値インクリメント挿入" )
'                       を実行します。
'                       ショートカット Ctrl + Shift + D に割り当てるには、マクロのオプション画面で "D"（大文字） を設定してください。
'   変更履歴：  SHIN-ICHI 2009/03/23 - 数値以外のテキストが含まれる場合、末尾の数値をインクリメントするように変更。
'   Copyright(C) 2008 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 数値インクリメント挿入()

    Dim textNumberIncrement As Data_TextNumberIncrement
    On Error GoTo Finally:
    Set textNumberIncrement = New Data_TextNumberIncrement
    ActiveCell.FormulaR1C1 = textNumberIncrement.Increment(ActiveCell.Offset(-1, 0).Text)
    Call ActiveCell.Offset(1, 0).Select
    On Error GoTo 0
    
Finally:
    Set textNumberIncrement = Nothing
End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブなセルの末尾の数値をインクリメントします。
'   入力：      アクティブセルの値
'   出力：      アクティブセルの値
'   注釈：
'   使用方法：  ショートカット Ctrl + Shift + I に割り当てるには、マクロのオプション画面で "I"（大文字） を設定してください。
'                       他に、自作の auto_open プロシージャで
'                       Call Application.OnKey("^+I", "Surviveplus.xla!末尾の数値をインクリメント")
'                       を実行する方法もあります。
'   変更履歴：  SHIN-ICHI 2009/03/23 - 選択範囲の複数のセルに対応。
'   Copyright(C) 2009 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 末尾の数値をインクリメント()

    If Selection Is Nothing Then Exit Sub

    Dim textNumberIncrement As Data_TextNumberIncrement

    On Error GoTo Finally:
    Application.ScreenUpdating = False
    Set textNumberIncrement = New Data_TextNumberIncrement
    
    Dim cell As Range
    For Each cell In Selection
        cell.FormulaR1C1 = textNumberIncrement.Increment(cell.Text)
    Next cell
    
    On Error GoTo 0
Finally:
    'If Err.Number <> 0 Then MsgBox (Err.Description)
    Application.ScreenUpdating = True
    Set textNumberIncrement = Nothing
End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      選択された範囲のテキストをクリップボードにコピーします。
'   入力：      アクティブセルのテキスト
'   出力：      クリップボードの内容
'   注釈：      処理に成功するとクリップボードの内容が変更されます。通常のコピーと異なり、コピーの選択状態が開始されません。
'   使用方法：
'   変更履歴：  SHIN-ICHI 2010/07/05 - オリジナル
'   Copyright(C) 2009 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub テキストとしてコピー()

    On Error Resume Next
    Dim clipboard As Object: Set clipboard = CreateObject("Net.Surviveplus.LibrariesForMacro.Clipboard")
    Call clipboard.SetText(Selection.Text)
    Set clipboard = Nothing

End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      クリップボードにコピーされたセルの式などの、「値のみ」の貼り付けを行います。
'   入力：      クリップボードの内容
'   出力：      アクティブセルの値
'   注釈：      処理に成功するとセルの内容が変更されます。
'   使用方法：  ショートカット Ctrl + Shift + V に割り当てるには自作の auto_open プロシージャで
'                       Call Application.OnKey( "^+V", "Surviveplus.xla!値の貼り付け" )
'                       を実行します。
'   変更履歴：  SHIN-ICHI 2009/03/16 - オリジナル
'   Copyright(C) 2008 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 値の貼り付け()

    On Error Resume Next
    Call Selection.PasteSpecial(Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False)

End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      選択された範囲のそれぞれの値をすべて連結して、クリップボードにコピーします。
'   入力：      アクティブセルの値
'   出力：      クリップボードの内容
'   注釈：      処理に成功するとクリップボードの内容が変更されます。
'   使用方法：
'   変更履歴：  SHIN-ICHI 2009/10/16 - オリジナル
'   Copyright(C) 2009 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 選択範囲の値を連結してコピー()

    Dim resultText As String
    Dim cell As Range
    For Each cell In Selection
        resultText = resultText & cell.Text
    Next cell
    
    Dim clipboard As Object: Set clipboard = CreateObject("Net.Surviveplus.LibrariesForMacro.Clipboard")
    Call clipboard.SetText(resultText)
    Set clipboard = Nothing

End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブワークブックの全てのシートの名称を置換します。
'   入力：      アクティブワークブックの全てのワークシートの名称
'   出力：      アクティブワークブックの全てのワークシートの名称
'   注釈：      フォームモジュール ReplaceForm が必要です。
'   使用方法：  実行するとダイアログが表示されます。検索する文字列と置換後の文字列を入力して実行ボタンを押すと、ワークシートの名称が変更されます。
'   変更履歴：  SHIN-ICHI 2010/06/23 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub ワークシートの名称を置換()

'Try
On Error GoTo Finally:
    Dim dialog As New ReplaceForm
    dialog.Caption = "ワークシートの名称を置換"
    Call dialog.Show(vbModal)
    
    If dialog.DialogResult Then
        
        Dim targetSheet As Worksheet
        For Each targetSheet In ActiveWorkbook.Worksheets
            targetSheet.name = Replace(targetSheet.name, dialog.FindText, dialog.ReplaceText)
        Next targetSheet
        
    End If
    
Finally:
    Unload dialog
    Set dialog = Nothing

End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブワークブックの選択されているセルの範囲のテキストを全て取得して、クリップボードにコピーします。
'                   通常のコピーと異なり、テキストを取得できた場合のみ、1行に1つずつコピーします。
'   入力：      アクティブワークブックの選択されているセルの範囲
'   出力：      クリップボード
'   注釈：      このファイルのマクロを実行するには surviveplusnet-libraries-for-macro が必要です。
'                   http://code.google.com/p/surviveplusnet-libraries-for-macro/
'   使用方法：  値を取得したい範囲を選択して実行してください。範囲の値が1行ずつクリップボードにコピーされます。
'                   1つのテキストが1行にコピーされます。値が取得できない場合はダイアログが表示されます。
'   変更履歴：  SHIN-ICHI 2010/06/30 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 選択された範囲の値を取得する()

    Dim targetCells As Range: Set targetCells = Selection
    Dim result As String: result = ""
    
    Dim cell As Range
    For Each cell In targetCells
        
        Dim valueText As String: valueText = cell.Text
        If valueText <> "" Then result = result & valueText & vbCrLf
    Next cell
    
    If result <> "" Then
        ' クリップボードにコピーします。
        Dim clipboard As Object: Set clipboard = CreateObject("Net.Surviveplus.LibrariesForMacro.Clipboard")
        Call clipboard.SetText(result)
        Set clipboard = Nothing
    Else
        Call MsgBox("範囲に値がありませんでした。", vbInformation)
    End If

End Sub

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブワークブックの選択されているセルの範囲につけられた「名前」を全て取得して、クリップボードにコピーします。
'   入力：      アクティブワークブックの選択されているセルの範囲
'   出力：      クリップボード
'   注釈：      このファイルのマクロを実行するには surviveplusnet-libraries-for-macro が必要です。
'                   http://code.google.com/p/surviveplusnet-libraries-for-macro/
'   使用方法：  名前を取得したい範囲を選択して実行してください。範囲に名前がつけられているときはクリップボードにコピーされます。
'                   1つの名前が1行にコピーされます。名前がつけられていないときはダイアログが表示されます。
'   変更履歴：  SHIN-ICHI 2010/06/30 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 選択された範囲の名前を取得する()

    Dim targetCells As Range: Set targetCells = Selection
    Dim result As String: result = ""
    
    Dim cell As Range
    For Each cell In targetCells
        
        Dim rangeName As String: rangeName = GetRangeName(cell)
        If rangeName <> "" Then result = result & rangeName & vbCrLf
    Next cell
    
    If result <> "" Then
        ' クリップボードにコピーします。
        Dim clipboard As Object: Set clipboard = CreateObject("Net.Surviveplus.LibrariesForMacro.Clipboard")
        Call clipboard.SetText(result)
        Set clipboard = Nothing
    Else
        Call MsgBox("範囲に名前がありませんでした。", vbInformation)
    End If

End Sub

'------------------------------------------------------------------------
'   目的：      指定されたセルの名前を取得します。
'   入力：      引数 cell - セル（範囲）
'   戻り値：      セルの範囲の名前を返します。範囲の名前がないときは空文字 "" を返します。
'   注釈：      引数に指定するセルの範囲は1つのセルにしてください。それ以外はテストしていません。
'   使用方法：  rangeName = GetRangeName( cell )
'   変更履歴：  SHIN-ICHI 2010/06/30 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Private Function GetRangeName(cell As Range) As String
'Try
    On Error GoTo Catch:
    
    Dim rangeName As name
    For Each rangeName In cell.Worksheet.Parent.Names
        If rangeName = cell.name Then
            'return
            GetRangeName = rangeName.name: GoTo Finally:
        End If
    Next rangeName
    
    'return
    GetRangeName = "": GoTo Finally:
    
    
GoTo Finally:
Catch:
    ' 名前が指定されていない時は、cell.Name が取得できずにここにキャッチされます。
    'Debug.Print "GetName Error: " & Err.Description
    GetRangeName = ""
    
GoTo Finally:
Finally:

    Exit Function
'End Try
End Function

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブワークブックの選択されているセルの範囲の「名前」に、クリップボードのテキストを設定します。
'   入力：      クリップボードのテキスト
'   出力：      アクティブワークブックの選択されているセルの範囲
'   注釈：      このファイルのマクロを実行するには surviveplusnet-libraries-for-macro が必要です。
'                   http://code.google.com/p/surviveplusnet-libraries-for-macro/
'   使用方法：  クリップボードにテキストをコピーし、名前を設定したい範囲を選択してマクロを実行してください。
'   変更履歴：  SHIN-ICHI 2010/07/01 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub 選択された範囲に名前として貼り付ける()

    ' クリップボードから貼り付けます。
    Dim clipboard As Object: Set clipboard = CreateObject("Net.Surviveplus.LibrariesForMacro.Clipboard")
    Dim nameText As String: nameText = clipboard.GetText()
    Set clipboard = Nothing
    
    nameText = Trim(nameText)
    If nameText <> "" Then
        Dim targetCells As Range: Set targetCells = Selection
        targetCells.name = nameText
    
    Else
        Call MsgBox("クリップボードにテキストがありません。", vbInformation)
    End If

End Sub

'------------------------------------------------------------------------
'   目的：      指定されたワークシートを、指定された名称で複製します。
'   入力：      引数 targetSheet - 複製するワークシート
'   入力：      引数 newName - 新しいワークシートの名称
'   戻り値：      作成されたワークシートを返します
'   注釈：
'   使用方法：  set newSheet = CopyWorksheet( ActiveSheet, "NewName")
'   変更履歴：  SHIN-ICHI 2010/07/05 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Private Function CopyWorksheet(ByVal targetSheet As Worksheet, ByVal newName As String) As Worksheet

    Dim nowIndex As Integer: nowIndex = targetSheet.Index
    Call targetSheet.Copy(After:=targetSheet)
    
    Dim newSheet As Worksheet: Set newSheet = targetSheet.Parent.Sheets(nowIndex + 1)
    On Error Resume Next
    newSheet.name = newName
    On Error GoTo 0
    
    ' Return
    Set CopyWorksheet = newSheet: Exit Function
    
End Function

'------------------------------------------------------------------------
' マクロ
'------------------------------------------------------------------------
'   目的：      アクティブワークシートを、ダイアログで指定された名称で複数同時にコピーします。
'   入力：      アクティブワークシート
'   出力：      新しいワークシートが、アクティブワークシートの後ろに追加されます。
'   注釈：      このマクロの実行には CopyWorkSheetDialogForm.frm と CopyWorksheet 関数が必要です。
'   使用方法：  実行するとダイアログが表示されます。1行に１つ、新しいワークシートの名称をしてしてOKボタンを押してください。
'   変更履歴：  SHIN-ICHI 2010/07/05 - オリジナル
'   Copyright(C) 2010 SHIN-ICHI all rights reserverd. ( http:// surviveplus.net )
'------------------------------------------------------------------------
Public Sub ワークシートを複数コピーする()

    Dim targetSheet As Worksheet: Set targetSheet = ActiveSheet
    Dim dialog As CopyWorkSheetDialogForm
    
'Try
    On Error GoTo Catch:
    Application.ScreenUpdating = False
    Set dialog = New CopyWorkSheetDialogForm
    
    dialog.NewNames = Split(targetSheet.name + "のコピー", vbCrLf)
    If dialog.ShowDialog Then
    
        Dim i As Integer
        For i = UBound(dialog.NewNames) To LBound(dialog.NewNames) Step -1
            Dim newName As String: newName = Trim(dialog.NewNames(i))
            If newName <> "" Then Call CopyWorksheet(targetSheet, newName)
        Next i
   
    End If
    GoTo Finally:

Catch:
    Call MsgBox("ワークシートを複数コピーする マクロでエラーが発生しました。" & Err.Description)
    GoTo Finally:
    
Finally:
    Application.ScreenUpdating = True
    If Not dialog Is Nothing Then
        Call Unload(dialog)
        Set dialog = Nothing
    End If
End Sub

